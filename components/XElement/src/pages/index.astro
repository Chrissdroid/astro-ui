---
import XElement from '../components/XElement.astro'

const add = () => counter.dataset.value++
const sub = () => counter.dataset.value--
const log = (e) => console.log(e);

---

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Document</title>
</head>
<body>
    <XElement
        @is='div'
        @once={element => console.log("Loaded",element)}  
    >
       <XElement 
            @is="p" 
            id='counter' 
            data-value="0" 
            @once={element=>{
                function getValue(){
                    //Value cant be less than 0
                    return element.dataset.value >= 0 ? element.dataset.value : element.dataset.value = 0
                }
                function printValue(){
                    let value = getValue()
                    element.textContent = value
                    requestAnimationFrame(printValue)
                }
                requestAnimationFrame(printValue)
            }}
           >
        <!-- Counter value goes in here  -->
       </XElement>
    
        <XElement 
            @is='button'
            style="font-size: x-large; color:green"
            @click={add}
        >
            &plus;
        </XElement>
        <XElement 
            @is='button'
            style="font-size: x-large; color:green"
            @click={sub}
        >
            &minus;
        </XElement>
    </XElement>
       <XElement @is='input' @change:prevent={event => console.log(event.target.value)}>
       </XElement>
    <!-- Use Case switching text color -->
    <XElement
        @is='div'
        @ref={element => console.log(element)}
        @click={log}  
    >
        <!-- Ref out the element -->
        <!-- to Reference the element, you have to refer to the event.target -->
    
        <XElement 
            @is='h1'
            style="font-size: x-large; color:green"
            @click={()=>this.style.color='red'}
        >
            Hello World
        </XElement>
    </XElement>
    <XElement @is="button" @once={() => {
    let count = 0

    this.onclick = () => {
        this.nextElementSibling.textContent = ++count
    }
}}>Increment</XElement>&nbsp;<span>0</span>

<XElement @is="div" @resize={e=>{
  console.log(e)
}}>
  <XElement @is="button" @once={() => {
    let count = 0

    this.onclick = () => {
      this.nextElementSibling.textContent = ++count
    }
  }}>Increment</XElement>
  &nbsp;
  <span>1</span>
</XElement>
</body>
</html>