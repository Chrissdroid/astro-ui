---
import DocumentLayout from '../../layouts/DocumentLayout.astro'
import fs from 'node:fs/promises'
import path from "node:path";

export async function getStaticPaths(){
    let docsFiles = await Astro.fetchContent('../../../../../docs/XElement/**/*.md')
    let staticPaths = docsFiles.map(doc=>{
        return {
            params:{
                slug: doc.file.pathname.split('/').splice(8).join('/').toLowerCase().replace('.md','')
            },
            props:{
                doc
            }
        }
    }).filter(item=>item.params.slug !== 'readme').filter(item=>!(item.params.slug.includes('sarahedits')))
    let routeConfig = staticPaths.map(item=>{
        let route = item.params.slug,
            name = route.split('/').pop(),
            dir = route.split('/').splice(0,route.split('/').length-1),
            path = route
        const routeObj = {
            name,dir,path
        }
        return routeObj
        }).sort((a,b)=>{
            let aDir = a.dir, bDir = b.dir
            if(aDir > bDir) return 1
            if(aDir < bDir) return -1
            if(aDir == bDir) return 0
        })
    function groupBy(objArr,property){
        const recursiveFunc =(item,...keys)=>{
            return (keys.length > 1) 
                    ? recursiveFunc(item[keys[0]],keys.slice(1)) 
                    : item[keys[0]]
        }
        return objArr.reduce((acc,obj)=>{
            let directory = obj[property]
            let group = recursiveFunc(obj,directory)//This doesnt work =(
            acc[directory] = acc[directory] || []
            if(directory.length === 1){
                    acc[directory].push(obj)
            }
            if(directory.length > 1){
                //How do I make this n-levels deep?
            }
            return acc
        },{})
    }    

    // console.log(groupBy(routeConfig,'dir'))
    // groupBy(routeConfig,'dir')
    // console.log(groupRoutes(routeConfig,'dir'))

    const generateRouteConfig = async() =>{
        try {
            await fs.writeFile(`${process.cwd()}/src/config/docsRoutes.json`,JSON.stringify(routeConfig,null,2))
        } catch (error) {
            throw new Error('you fucked up writing the file')            
        }
    }
    
    await generateRouteConfig()
    return staticPaths
}

const {slug}=Astro.request.params
const {doc} = Astro.props
---
    <DocumentLayout contents={doc}></DocumentLayout>
