---
import DocumentLayout from '../../layouts/DocumentLayout.astro'
import fs from 'node:fs/promises'
import path from "node:path";

export async function getStaticPaths(){
    let docsPath = new URL('../../../../../docs/',import.meta.url).pathname
    let docs
    let docsFiles = await Astro.fetchContent('../../../../../docs/XElement/**/*.md')
    let staticPaths = docsFiles.map(doc=>{
        const docPath = doc.file.pathname.slice(docsPath.length)
        return {
            params:{
                slug: docPath.split('/').filter(x=>x !== 'XElement').join('/').toLowerCase().replace('.md','')
            },
            props:{
                docPath,
                doc
            }
        }
    }).filter(item=>!(item.params.slug.includes('readme'))).filter(item=>!(item.params.slug.includes('sarahedits')))
    
    let routeConfig = staticPaths.map(item=>{
        let route = item.params.slug,
            name = route.split('/').pop(),
            dir = route.split('/').splice(0,route.split('/').length-1),
            path = route
        const routeObj = {dir,route:{
            name,path
        }}
        return routeObj
        }).sort((a,b)=>{
            let aDir = a.dir, bDir = b.dir
            if(aDir > bDir) return 1
            if(aDir < bDir) return -1
            if(aDir == bDir) return 0
        })
    /**This is the function that Im having trouble with */    
    let groupBy = (objectsArray,property)=>{
        return objectsArray.reduce((results,obj)=>{
            (results[obj[property]] = results[obj[property]] || []).push(obj.route)
            return results
        },{})
    }
    
    console.log(groupBy(routeConfig,'dir'))
 
    const generateRouteConfig = async() =>{
        try {
            await fs.writeFile(`${process.cwd()}/src/config/docsRoutes.json`,JSON.stringify(routeConfig,null,2))
        } catch (error) {
            throw new Error('you fucked up writing the file')            
        }
    }
    
    await generateRouteConfig()
    return staticPaths
}

const {slug}=Astro.request.params
const {doc} = Astro.props
---
    <DocumentLayout contents={doc}></DocumentLayout>
