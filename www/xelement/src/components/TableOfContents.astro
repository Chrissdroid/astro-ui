---
import XElement from 'astro-xelement'
const {headers}=Astro.props
const {div:TOC} = XElement
const activeID = false
console.log(Astro.request.url.href)
---
    <TOC class="toc"
        @do={(element)=>{
            const observer = new IntersectionObserver(entries=>{
                entries.forEach(entry=>{
                    const link = element.querySelector(`[href*="#${entry.target.getAttribute('id')}"]`)
                    if(link){
                        if(entry.isIntersecting){
                            element.querySelectorAll(`[href*='#']`).forEach(link => {
                            link.classList.remove('toc-active')
                        });}
                        if(entry.intersectionRatio > 0){
                            link.classList.add('toc-active')
                        }
                    }
  
                },{root: document.getElementById('.js-documentation'),rootMargin: '0% 0% -80% 0%',threshold:[0]})
            })
            const headings =[...document.querySelectorAll('.js-documentation > h1, h2, h3, h4, h5 ')]
            headings.forEach(heading=>observer.observe(heading))
        }}>
    <h2 class="heading">On this page</h2>
			<ul class="toc-nav">
				{headers
					.filter(({ depth }) => depth < 4)
					.map((header) => (
                        <li>
                            <a href={`${Astro.request.url.href}#${header.slug}`}>
                                {header.text.replace('<','&#60').replace('>','&#62')}
                            </a>
                        </li>
					))}
			</ul>
    
    </TOC>
    <style lang="scss">
            .toc{
                position:sticky;
                top:5rem;
                right:0;
                
                &-nav{
                }
                
            }
            .toc-active{
                color:red
            }
        
    </style>